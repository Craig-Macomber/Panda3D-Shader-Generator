A shader generator for Panda3D
Specifically, a Shader Meta-Language for implementing, customizing and extending shader generators.

Goals:
- Allow coders to provide all possible shader effects (no restrictions on shader code, stages used, inputs, outputs etc) (Done)
- Allow easy realtime configuration and tuning of effects (accessible to artists and coders) (Started, see editor)
- Generate custom shaders based on render state and other settings on a per NodePath basis from a single configuration (Done via use of meta-language design)
- Allow easy use of multiple separate configurations applied to different NodePaths (ex: one for deferred shaded lights, one for models, one for particles. Done.)
- Produce an extensive collection of useful NodeTypes and example Graphs, sample applications etc. (Most of the remaining work is here)

It is important that adding, sharing and using libraries of effects is easy. To facilitate this, they are packed into libraries which can simply be placed in a libraries folder (even recursively)
There is however currently no name spacing. For now, manually prefix things if you with to avoid any potential conflicts.

The focus on allowing full control of the shaders is important. A shader generator that can't use custom shader inputs, render to multiple render targets, or use multiple stages (vshader, fshader, gshader etc) is not complete. This design inherently supports all of these, and more.

Many more details in shaderBuilder.py, see comments near top.

ShaderEditor TODO:

Allow editing
Add previewing
Allow showing part of graph that is active (and perhaps other link status values) in editor for specific NodePaths

